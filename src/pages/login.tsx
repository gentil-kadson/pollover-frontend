import Head from "next/head";
import LoginForm from "@/components/LoginForm";

import { useState, useContext } from "react";
import { UserIdContext } from "./_app";
import { useRouter } from "next/router";
import styles from "../styles/Login.module.css";
import api from "./api/axios";

type User = {
  id: number;
  username: string;
};

export default function Login() {
  const [username, setUsername] = useState<string>("");
  const [errMessage, setErrMessage] = useState<string>("");
  const router = useRouter();
  const { setUserId } = useContext(UserIdContext);

  function handleUsernameInput(username: string) {
    setUsername(username);
  }

  function handleRegisterButtonClick(e: any) {
    e.preventDefault();
    api
      .post("/users", {
        username,
      })
      .then((success) => {
        setUserId(success.data.id);
        router.push("/");
      })
      .catch((err) => {
        if (err.response.status === 400) {
          setErrMessage("Username already taken.");
        }
      });
  }

  function handleLoginButtonClick(e: any) {
    e.preventDefault();
    api
      .get("/users")
      .then((response) => {
        const users: User[] = response.data;
        const foundUser = users.find((user) => user.username === username);
        if (foundUser) {
          setUserId(foundUser.id);
          router.push("/");
        } else {
          setErrMessage("User not found.");
        }
      })
      .catch((err) => console.log(err));
  }

  return (
    <>
      <Head>
        <title>Login</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <section className={styles.section}>
          <h1 className={styles.loginTitle}>Authentication</h1>
          <LoginForm
            handleUsername={handleUsernameInput}
            handleRegisterClick={handleRegisterButtonClick}
            handleLoginClick={handleLoginButtonClick}
          />
          {errMessage.length > 0 && (
            <p className={styles.usernameTakenText}>{errMessage}</p>
          )}
        </section>
      </main>
    </>
  );
}
